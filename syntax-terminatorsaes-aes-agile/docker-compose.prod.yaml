services:

  # Nginx
  nginx:
    image: nginx:1.25.3-alpine-slim
    restart: always
    working_dir: /etc/nginx/conf.d
    ports:
      - "${APP_PORT}:80"
    volumes:
      - ./services/nginx/hosts:/etc/nginx/conf.d 
      - ./certbot/conf:/etc/letsencrypt
    networks:
      - local
  
  # Backend
  fastapi-backend:
    build: 
      context: ./sources/fastapi-backend
    restart: always  
    expose:
      - "${BACKEND_EXTERNAL_PORT}"  
    networks:
      - local 
   
  # Client
  react-client:
    build: 
      context: ./sources/react-client
    restart: always  
    expose:
      - "80"  
    networks:
      - local   

  # PostgreSQL
  postgres:
    image: postgres:15-alpine
    restart: always
    environment:
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      POSTGRES_DB: "${POSTGRES_DB}"
    ports:
      - "5432:5432"  # Открываем порт для внешнего доступа к БД
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./services/db/pg_hba.conf:/etc/postgresql/pg_hba.conf
    command: ["postgres", "-c", "listen_addresses=*", "-c", "hba_file=/etc/postgresql/pg_hba.conf"]


    networks:
      - local
  # Adminer
  adminer:
    image: adminer:latest
    restart: always
    ports:
      - "8050:8050" # Порт, по которому будет доступен Adminer
    environment:
      ADMINER_DEFAULT_SERVER: postgres
    networks:
      - local


networks:
  local:

volumes:
  postgres_data: